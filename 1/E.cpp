/*На плоскости дан набор точек с целочисленными координатами. Найдите треугольник наибольшей площади с вершинами из этого множества точек, одна из сторон которого лежит на оси Ox.
Формат входных данных
В первой строке дано целое число n — число точек (1 ⩽ n ⩽ 1000). Каждая из следующих n
строк содержит два целых числа x и y — координаты точек. Все координаты не превосходят 1000 по
абсолютной величине.
Формат выходных данных
Выведите одно вещественное число — максимальную площадь треугольника, удовлетворяющего
условию задачи. Если такого треугольника не существует или он вырожденный, выведите 0.
Ваш ответ будет считаться верным, если он отличается от правильного не более чем на 10−9
.
*/

using namespace std;

#include <iostream>
#include <cmath>
#include<vector>

int n, max_x = -1010, min_x = 1010, max_y = 0, mx, x, y;
int q;
vector< pair<int, int> > xy;

int main()
{
    ios_base::sync_with_stdio(0);
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> x >> y;

        if (y == 0) {
            if (x > max_x) max_x = x;
            if (x < min_x) min_x = x;
            q++;
        }
        else {
            if (abs(y) > max_y) {
                max_y = abs(y);
            }

            //xy.push_back({ x, y });
        }
    }

    //for (pair <int, int> p : xy)

    max_x -= min_x;

    double res = (static_cast<double>(max_x) * max_y) / 2;
    //cout << max_x << " " << max_y << "\n";
    if (q < 2 || max_y == 0) cout << 0;
    else cout << abs(res);
}

