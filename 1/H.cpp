/*Маша изучает большие числа.Она положила в ряд n карточек.На каждой карточке написана
цифра от 1 до 9. Вместе они образуют n - значное целое число s.
За одну операцию Маша может взять две соседние карточки и поменять их местами(поворачивать карточки, превращая одни цифры в другие, нельзя).Маша может произвести не более k
операций.Какое минимальное n - значное число может получиться в итоге ?
Формат входных данных
В первой строке задано целое число t — число наборов входных данных(1 ⩽ t ⩽ 100 000).Далее
следуют сами наборы.
Каждый набор входных данных — это строка, в которой записаны через пробел целые числа s
и k.Число s положительное и состоит из цифр от 1 до 9. Кроме того, 0 ⩽ k ⩽ 1018
.
Суммарное число цифр во всех числах s не превосходит 100 000.
Формат выходных данных
Для каждого набора входных данных выведите строку с ответом : минимальное n - значное число,
которое может получиться из s, если не более k раз поменять местами две соседние цифры.*/



using namespace std;

#include <iostream>
#include <string>
#include <vector>

string s;
long long n, t;

int main()
{
    ios_base::sync_with_stdio(0);

    cin >> t;

    for (int q = 0; q < t; q++) {
        cin >> s >> n;
        vector <int> numbers;

        for (char c : s) {
            numbers.push_back(c - '0');
        }

        long long l = 0, r = 0;

        while (n > 0 && r < numbers.size() - 1) {
            if (numbers[r] < numbers[r + 1]) {
                r++;
            }
            else {
                while (numbers[l] <= numbers[r + 1]) l++;
                while ( (r - l + 1) > n) l++;
                    
                int a = numbers[r + 1];
                for (long long j = r; j >= l; j--) numbers[j + 1] = numbers[j];
                numbers[l] = a;
                n -= (r - l + 1);
                r++;

            }
        }

        for (int i = 0; i < numbers.size(); i++) cout << numbers[i];
        cout << "\n";
        numbers.clear();
    }
}

